name: "ðŸš€ Release: Tag & Version Bump on main"

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine next version tag
        id: tag
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v0.0.0"
          else
            VERSION="${LATEST_TAG#v}"
            IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
            NEW_MINOR=$((MINOR + 1))
            NEW_TAG="v${MAJOR}.${NEW_MINOR}.0"
          fi

          echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"
          echo "Determined new tag: $NEW_TAG"

      - name: Bump version in pom.xml
        run: |
          TAG="${{ steps.tag.outputs.new_tag }}"
          VERSION="${TAG#v}"
          mvn versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add pom.xml
          git diff --cached --quiet || git commit -m "chore: bump version to $VERSION"
          git push

      - name: Create and push Git tag
        run: |
          TAG=${{ steps.tag.outputs.new_tag }}
          git tag "$TAG"
          git push origin "$TAG"

      - name: Generate changelog from commits
        run: |
          PREV_TAG=$(git tag --sort=-v:refname | sed -n '2p')
          if [[ -z "$PREV_TAG" ]]; then
            git log --pretty=format:"* %s (%an)" > CHANGELOG.md
          else
            git log "${PREV_TAG}..HEAD" --pretty=format:"* %s (%an)" > CHANGELOG.md
          fi

      - name: Commit CHANGELOG.md
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add CHANGELOG.md
          git diff --cached --quiet || git commit -m "docs: update changelog for ${{ steps.tag.outputs.new_tag }}"
          git push

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh release create "${{ steps.tag.outputs.new_tag }}" \
            --title "${{ steps.tag.outputs.new_tag }}" \
            --notes-file CHANGELOG.md

      - name: Done
        run: echo "ðŸŽ‰ Published ${{ steps.tag.outputs.new_tag }} successfully!"

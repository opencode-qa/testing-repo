name: "Main CI Pipeline"

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [main, dev]
    tags-ignore: ['*']

permissions:
  contents: read
  actions: read

jobs:
  validate-pom:
    name: "📦 Validate POM"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils
          chmod +x ./scripts/pom-validator.sh

      - name: Validate POM
        run: |
          xmllint --noout pom.xml || (echo "::error::Malformed XML in pom.xml"; exit 1)
          ./scripts/pom-validator.sh --strict --html

      - uses: actions/upload-artifact@v4
        name: 📦 Upload POM Report
        with:
          name: pom-validation-report
          path: Reports/pom-validation-report.html

  build:
    name: "🏗️ Build & Test"
    needs: validate-pom
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build with Maven
        run: mvn -B clean verify

      - uses: actions/upload-artifact@v4
        name: 📊 Upload Test Results
        with:
          name: test-results-${{ github.run_id }}
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**

  security:
    name: "🔒 Dependency Security"
    needs: validate-pom
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add timeout to prevent hanging
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Fast Dependency Check
        run: |
          # Lightweight security check using Maven
          mvn dependency:list -Dsort=true -DoutputFile=dependencies.txt
          echo "Basic dependency check completed"
          cat dependencies.txt

  quality:
    name: "📊 Code Quality"
    needs: validate-pom
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Run Checkstyle
        run: mvn checkstyle:check
